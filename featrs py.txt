                                     FEATURES OF PYTHON
									 ------------------
* Simple easy to Learn.
* Java used Keyword 53 & python is 30.
* It is freeware & open source.
   Freeware-No cost.
   Open Source-Able to see implement.
* It is Jython beacause of Java+Python=Jython customization.
* It is High level programming Language.
* Python is platform Independent.
* It is Write Once & Run Anywhere-WORA principle.
* Portability: Moving python programs from one platform to another platform.
* Dynamically Typed programming.
* It is both oriented and object oriented procedure.
* It is a Interpreted.
* Python is extensible.
          - We can improve performance as the application.
* Python is embeded.	
          - We can use python performance other launguages.
* It is entensive library 

		  
   Limitation of Python
   ---------------------
   
* Performance wise.
* Mobile application.
* MYth: Python is not suitable for large scale enterprises application.


 Flavors of Python:
 ------------------
1.CPython:
It is the standard flavor of Python. It can be used to work with C lanugage Applications

2. Jython or JPython:
It is for Java Applications. It can run on JVM

3. IronPython:
It is for C#.Net platform

4.PyPy:
The main advantage of PyPy is performance will be improved because JIT compiler is
available inside PVM.

5.RubyPython
For Ruby Platforms

6. AnacondaPython
It is specially designed for handling large volume of data processing.

Python Versions:
----------------
Python 1.0V introduced in Jan 1994
Python 2.0V introduced in October 2000
Python 3.0V introduced in December 2008
Note: Python 3 won't provide backward compatibility to Python2
i.e there is no guarantee that Python2 programs will run in Python3.

Current versions
Python 3.6.1 Python 2.7.13

Identifiers
A name in Python program is called identifier.
It can be class name or function name or module name or variable name.
a = 10

Rules to define identifiers in Python:

1. The only allowed characters in Python are
* alphabet symbols(either lower case or upper case)
* digits(0 to 9)
* underscore symbol(_)
By mistake if we are using any other symbol like $ then we will get syntax error.
* cash = 10 √
* ca$h =20 False

2. Identifier should not starts with digit
* 123total -False
* total123 √
3. Identifiers are case sensitive. Of course Python language is case sensitive language.
* total=10
* TOTAL=999
* print(total) #10
* print(TOTAL) #999

Identifier:
1. Alphabet Symbols (Either Upper case OR Lower case)
2. If Identifier is start with Underscore (_) then it indicates it is private.
3. Identifier should not start with Digits.
4. Identifiers are case sensitive.
5. We cannot use reserved words as identifiers
Eg: def=10- False
6. There is no length limit for Python identifiers. But not recommended to use too lengthy
identifiers.
7. Dollor ($) Symbol is not allowed in Python.
Q. Which of the following are valid Python identifiers?
1) 123total- False
2) total123- √
3) java2share- √
4) ca$h- False
5) _abc_abc_ √
6) def- False
7) if- False

Note:
1. If identifier starts with _ symbol then it indicates that it is private
2. If identifier starts with __(two under score symbols) indicating that strongly private
identifier.
3.If the identifier starts and ends with two underscore symbols then the identifier is
language defined special name,which is also known as magic methods.
Eg: __add_

Reserved Words
In Python some words are reserved to represent some meaning or functionality. Such type
of words are called Reserved words.
There are 33 reserved words available in Python.
* True,False,None
* and, or ,not,is
* if,elif,else
* while,for,break,continue,return,in,yield
* try,except,finally,raise,assert
* import,from,as,class,def,pass,global,nonlocal,lambda,del,with

Note:
1. All Reserved words in Python contain only alphabet symbols.
2. Except the following 3 reserved words, all contain only lower case alphabet symbols.
* True
* False
* None
Eg: a= true -False
a=True √
>>> import keyword
>>> keyword.kwlist
['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else',
'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or',
'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
									 
									 
									 